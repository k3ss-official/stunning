name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8
          pip install -r src/backend/requirements.txt
          
      - name: Lint with flake8
        run: |
          flake8 src/backend --count --select=E9,F63,F7,F82 --show-source --statistics
          
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          
      - name: Install Node.js dependencies
        run: |
          cd src/frontend
          npm install
          
      - name: Lint with ESLint
        run: |
          cd src/frontend
          npm run lint
          
  test-backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r src/backend/requirements.txt
          pip install pytest pytest-cov
          
      - name: Test with pytest
        run: |
          cd src/backend
          pytest --cov=. --cov-report=xml
          
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./src/backend/coverage.xml
          fail_ci_if_error: false
          
  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          
      - name: Install dependencies
        run: |
          cd src/frontend
          npm install
          
      - name: Build
        run: |
          cd src/frontend
          npm run build
          
  build-docker:
    runs-on: ubuntu-latest
    needs: [lint, test-backend, build-frontend]
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Build backend image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: false
          tags: stunning-backend:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
